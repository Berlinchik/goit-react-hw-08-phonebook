{"version":3,"file":"static/js/954.7838e750.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/layout/dist/chunk-P74GIWPW.mjs","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.scss?e1a7","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.scss?573d","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/APP.module.scss?a2fa","pages/Contacts.jsx"],"sourcesContent":["// src/text.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport {\n  Text\n};\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.items.contacts;\nexport const selectFilter = state => state.items.filter;\nexport const selectLoading = state => state.items.isLoading;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.length > 0\n      ? contacts.filter(({ name }) => name.toLowerCase().includes(filter))\n      : contacts;\n  }\n);\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { Text } from '@chakra-ui/react';\nimport { selectContacts } from '../../redux/contacts/contacts-selectors';\nimport { addContacts } from '../../redux/contacts/contacts-operations';\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  VStack,\n} from '@chakra-ui/react';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const formik = useFormik({\n    initialValues: {\n      userName: '',\n      phone: '',\n    },\n    onSubmit: values => {\n      const elem = contacts.find(\n        ({ name }) => name.toLowerCase() === values.userName.toLowerCase()\n      );\n      if (!elem) {\n        dispatch(\n          addContacts({\n            name: values.userName,\n            number: values.phone,\n          })\n        );\n      } else {\n        return alert(`${values.userName} is already in contacts`);\n      }\n      formik.resetForm();\n    },\n  });\n\n  return (\n    <Box\n      w=\"400px\"\n      bg=\"white\"\n      p={6}\n      rounded=\"md\"\n      display=\"flex\"\n      justify=\"start\"\n      flexDir=\"column\"\n      borderRight=\"2px solid #805ad5\"\n      borderRadius=\"0\"\n      mr=\"15px\"\n    >\n      <Text textAlign=\"center\" fontSize=\"36px\" color=\"#805ad5\">\n        New contact\n      </Text>\n      <form onSubmit={formik.handleSubmit}>\n        <VStack spacing={4} align=\"flex-start\">\n          <FormControl>\n            <FormLabel fontSize=\"24px\" htmlFor=\"userName\">\n              Name\n            </FormLabel>\n            <Input\n              fontSize=\"24px\"\n              id=\"userName\"\n              name=\"userName\"\n              type=\"text\"\n              variant=\"filled\"\n              onChange={formik.handleChange}\n              value={formik.values.userName}\n              w=\"100%\"\n              h=\"50px\"\n            />\n          </FormControl>\n          <FormControl>\n            <FormLabel fontSize=\"24px\" htmlFor=\"phone\">\n              Phone\n            </FormLabel>\n            <Input\n              w=\"100%\"\n              h=\"50px\"\n              fontSize=\"24px\"\n              id=\"phone\"\n              name=\"phone\"\n              type=\"tel\"\n              variant=\"filled\"\n              onChange={formik.handleChange}\n              value={formik.values.phone}\n            />\n          </FormControl>\n          <Button type=\"submit\" w=\"100%\" colorScheme=\"purple\">\n            Add contact\n          </Button>\n        </VStack>\n      </form>\n    </Box>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__lJuMM\",\"item\":\"ContactList_item__Hx051\",\"btn\":\"ContactList_btn__kHn6c\",\"text\":\"ContactList_text__9Psyv\"};","import s from './ContactList.module.scss';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from '../../redux/contacts/contacts-selectors';\nimport { useDispatch } from 'react-redux';\nimport { deleteContacts } from '../../redux/contacts/contacts-operations';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  return filteredContacts.length > 0 ? (\n    <ul className={s.list}>\n      {filteredContacts.map(({ name, number, id }) => (\n        <li key={id} className={s.item}>\n          {name}: {number}\n          <button onClick={e => dispatch(deleteContacts(id))} className={s.btn}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <p className={s.text}>You don't have contacts</p>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__S09D5\"};","import s from './Filter.module.scss';\nimport { changeFilter } from '../../redux/contacts/contactsSlice';\nimport { useDispatch } from 'react-redux';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <input\n      className={s.input}\n      type=\"text\"\n      onChange={e => dispatch(changeFilter(e.target.value))}\n      placeholder=\"Filter\"\n    />\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"APP_container__TTMXJ\",\"title\":\"APP_title__HPzU1\",\"contacts\":\"APP_contacts__d6lQ1\"};","import ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport s from '../components/APP.module.scss';\nimport { getContacts } from '../redux/contacts/contacts-operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { selectLoading } from '../redux/contacts/contacts-selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={s.container}>\n      {/* <h1 className={s.title}>Phonebook</h1> */}\n      <ContactForm />\n      <div className={s.contacts}>\n        {isLoading ? (\n          <ThreeDots\n            height=\"80\"\n            width=\"80\"\n            radius=\"9\"\n            color=\"#805ad5\"\n            ariaLabel=\"three-dots-loading\"\n            wrapperStyle={{}}\n            wrapperClassName=\"\"\n            visible={true}\n          />\n        ) : (\n          <h2 className={s.title}>Contacts</h2>\n        )}\n        <Filter />\n        <ContactList />\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["Text","forwardRef","props","ref","styles","useStyleConfig","omitThemingProps","rest","className","align","decoration","casing","aliasedProps","compact","textAlign","textDecoration","textTransform","jsx","chakra","cx","__css","displayName","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","items","contacts","selectLoading","isLoading","selectFilteredContacts","filter","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","formik","useFormik","initialValues","userName","phone","onSubmit","values","alert","addContacts","number","resetForm","w","bg","p","rounded","display","justify","flexDir","borderRight","borderRadius","mr","fontSize","color","handleSubmit","spacing","htmlFor","I","id","type","variant","onChange","handleChange","h","colorScheme","filteredContacts","s","onClick","e","deleteContacts","changeFilter","target","placeholder","useEffect","getContacts","height","width","radius","ariaLabel","wrapperStyle","wrapperClassName","visible"],"sourceRoot":""}